.container {
  position: relative;
  &:hover {
    & > .pre,
    & > .next {
      display: block;
    }
  }
  &:active {
    & > .pre,
    & > .next {
      display: block;
    }
  }
  & > .item {
    padding-top: 5px;
    font-size: 16px;
    display: flex;
    flex-direction: column;
    gap: 15px;
    & > .day {
      font-size: 30px;
      line-height: 30px;
    }
    & > .month {
      width: fit-content;
      padding: 0px 5px 15px 0px;
      line-height: 16px;
      border-bottom: 2px solid var(--fontColor);
    }
    & > .title {
      font-size: 20px;
    }
    & > .author {
      align-self: flex-end;
      font-size: 12px;
    }
    & > .description {
    }
    & > img {
      border-radius: 10px;
      width: 100%;
      height: 160px;
      object-fit: cover;
    }
  }
  & > .pre,
  & > .next {
    position: absolute;
    top: calc(50% - 60px);
    font-size: 30px;
    font-weight: 800;
    color: var(--cateColor);
    display: none;
    cursor: url(/assets/link.ico), pointer;
    &:hover {
      animation: none;
    }
  }
  & > .pre {
    left: -28px;
    border-radius: 9999px 0 0 9999px;
    animation: leftMoves 1.5s linear infinite;
  }
  & > .next {
    right: -28px;
    border-radius: 0 9999px 9999px 0;
    animation: rightMoves 1.5s linear infinite;
  }
  & > ul {
    display: flex;
    margin: 0;
    margin-top: 15px;
    justify-content: center;
    gap: 8px;
    & > li {
      width: 10px;
      height: 10px;
      border-radius: 9999px;
      cursor: url(/assets/link.ico), pointer;
      transition: all 0.5s linear;
      background-color: var(--cateColor);
      &.active {
        cursor: url(/assets/pointer.ico), default;
        background-color: var(--styleColor);
        flex: 1;
      }
    }
  }
}
.unShow {
  display: none !important;
}

@keyframes leftMoves {
  0% {
    transform: translateX(0px);
  }
  33% {
    transform: translateX(-3px);
  }
  66% {
    transform: translateX(3px);
  }
  100% {
    transform: translateX(0px);
  }
}
@keyframes rightMoves {
  0% {
    transform: translateX(0px);
  }
  33% {
    transform: translateX(3px);
  }
  66% {
    transform: translateX(-3px);
  }
  100% {
    transform: translateX(0px);
  }
}
